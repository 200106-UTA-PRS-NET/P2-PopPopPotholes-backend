# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: none

pr:
- master

pool:
  vmImage: 'windows-latest'

variables:
  pathtosolution: 'PopPopPotholesAPI/'
  pathtotest: 'PopPopPotholesAPI/PopPopPotholesAPI.Test'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'PopPopSonar'
    organization: 'trostka'
    scannerMode: 'MSBuild'
    projectKey: 'PopPopToken'
    extraProperties: |
      sonar.cs.opencover.reportsPaths="$(Build.ArtifactStagingDirectory)/coverage/*"
      sonar.cs.vstest.reportsPaths="$(Build.ArtifactStagingDirectory)/test/*.trx"
      sonar.exclusions=**/wwwroot/lib/**/*

- script: dotnet build --configuration $(buildConfiguration)
  workingDirectory: $(pathtosolution)
  displayName: 'dotnet build $(buildConfiguration)'

- script: dotnet test
    --configuration $(buildConfiguration)
    --logger trx
    --no-build
    --results-directory $(Build.ArtifactStagingDirectory)/PopPopTest/
    /p:CollectCoverage=true
    /p:CoverletOutputFormat=opencover
    /p:CoverletOutput="$(Build.ArtifactStagingDirectory)/coverage/"
  workingDirectory: $(pathtosolution)
  displayName: 'dotnet test'

- task: SonarCloudAnalyze@1
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    arguments: --configuration $(buildConfiguration)
    publishWebProjects: true
    zipAfterPublish: true
    workingDirectory: '$(pathtosolution)'
  displayName: 'dotnet publish + zip'

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Azure subscription 1(754850ea-3e53-4645-b1d6-c006701fddbc)'
    appType: 'webAppLinux'
    appName: 'PopPopPotholes'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
